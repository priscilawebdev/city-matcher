/**
 * DEVELOPMENT WEBPACK CONFIGURATION
 */

const path = require('path')
const webpack = require('webpack')
const HtmlWebpackPlugin = require('html-webpack-plugin')
const CircularDependencyPlugin = require('circular-dependency-plugin')

const plugins = [
	new webpack.HotModuleReplacementPlugin(), // Tell webpack we want hot reloading
	new webpack.NoEmitOnErrorsPlugin(),
	new webpack.NamedModulesPlugin(),
	new HtmlWebpackPlugin({
		template: 'index.html',
		inject: true // Inject all files that are generated by webpack, e.g. bundle.js
	}),
	new CircularDependencyPlugin({
		exclude: /a\.js|node_modules/, // exclude node_modules
		failOnError: false // show a warning when there is a circular dependency
	})
]

module.exports = require('./webpack.config.base')({
	// Add hot reloading in development
	entry: [
		'eventsource-polyfill', // Necessary for hot reloading with IE
		'webpack-hot-middleware/client?reload=true',
		path.join(__dirname, 'src/index.js') // Start with src/index.js
	],

	// Don't use hashes in dev mode for better performance
	output: {
		filename: '[name].js'
	},

	// Add development plugins
	plugins,

	// Tell babel that we want to hot-reload
	babelQuery: {
		// require.resolve solves the issue of relative presets when dealing with
		// locally linked packages. This is an issue with babel and webpack.
		// See https://github.com/babel/babel-loader/issues/149 and
		// https://github.com/webpack/webpack/issues/1866
		presets: ['babel-preset-react-hmre'].map(require.resolve)
	},
	devtool: 'eval-source-map',
	performance: {
		hints: false
	}
})
